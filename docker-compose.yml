version: "3.1"

services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - "127.0.0.1:${GRAFANA_PORT}:3000"
    networks:
      - network_default
    env_file: .env

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - grafana
    networks:
      - network_default
    env_file: .env

  postgres_db:
    image: postgres:15-alpine
    restart: always
    logging:
      driver: none
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: GMT-3
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - db:/var/lib/postgresql/data
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=${POSTGRES_DB} --username=foo" ]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - network_default
    env_file: .env

networks:
  network_default:
    driver: bridge

volumes:
  db:
  prometheus:
